from picamera2 import Picamera2
from picamera2.encoders import JpegEncoder
from picamera2.outputs import FileOutput
from flask import Flask, Response, render_template_string
import io
import time
import threading

app = Flask(__name__)
picam2 = None
output = None

def initialize_camera():
    global picam2, output
    picam2 = Picamera2()
    config = picam2.create_video_configuration(main={"size": (640, 480)})
    picam2.configure(config)
    
    output = io.BytesIO()
    picam2.start_recording(JpegEncoder(), FileOutput(output))
    
def get_frame():
    global output
    while True:
        with output.lock:
            yield (b'--frame\r\n'
                  b'Content-Type: image/jpeg\r\n\r\n' + output.getvalue() + b'\r\n')
        time.sleep(0.1)

@app.route('/')
def index():
    return render_template_string('''
    <!DOCTYPE html>
    <html>
    <head>
        <title>Raspberry Pi Camera Stream</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }
            h1 { color: #333; }
            .stream { margin: 20px auto; border: 2px solid #ddd; }
        </style>
    </head>
    <body>
        <h1>Camera Stream</h1>
        <img src="/video_feed" class="stream" width="640" height="480" />
    </body>
    </html>
    ''')

@app.route('/video_feed')
def video_feed():
    return Response(get_frame(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    initialize_camera()
    app.run(host='0.0.0.0', port=8000, threaded=True)
